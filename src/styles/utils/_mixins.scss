@use "sass:map";

%cover {
  height: 100%;
  left: 0;
  object-fit: cover;
  position: absolute;
  top: 0;
  width: 100%;
}

@mixin placeholder {
  &.placeholder {
    @content;
  }
  &::-webkit-input-placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
}

@mixin autoFill($bgColor: $grey-100, $color: $grey-0) {
  &:-webkit-autofill,
  &:-webkit-autofill:hover,
  &:-webkit-autofill:focus,
  &:-webkit-autofill:active {
    box-shadow: 0 0 0 30px $bgColor inset;
    -webkit-box-shadow: 0 0 0 30px $bgColor inset;
    -webkit-text-fill-color: $color;
  }
}

@mixin cursor {
  @media (any-pointer: fine) {
    @content;
  }
}

@mixin cursor-mobile {
  $tabletSize: map.get($breakpoints, "tablet");
  @media (min-width: $tabletSize) and (any-pointer: fine) {
    @content;
  }
}

@mixin ratio($height, $width) {
  font-size: 0;
  overflow: hidden;
  position: relative;
  aspect-ratio: calc($width / $height);

  @supports not (aspect-ratio: calc($width / $height)) {
    &::before {
      content: "";
      float: left;
      padding-top: calc((#{$height} / #{$width}) * 100%);
    }

    &::after {
      content: "";
      display: block;
      clear: both;
    }
  }

  img,
  video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

@mixin flex-gap($row-gap, $column-gap: $row-gap) {
  display: inline-flex;
  flex-wrap: wrap;

  @supports (gap: $row-gap $column-gap) {
    --row-gap: #{$row-gap};
    --column-gap: #{$column-gap};
    //margin: calc(-1 * var(--row-gap)) 0 0 calc(-1 * var(--column-gap));
    //width: calc(100% + var(--column-gap));

    > * {
      margin: var(--row-gap) 0 0 var(--column-gap);
    }

    > :first-child {
      margin-left: 0;
      margin-top: 0;
    }
  }
}

@mixin html-content() {
  strong {
    font-weight: bold;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: revert;
  }

  a {
    text-decoration: underline;
  }

  > p {
    &:first-of-type {
      margin: 0;
    }

    &:not(:first-of-type) {
      margin-top: revert;
    }

    &:last-of-type {
      margin-bottom: 0;
    }
  }

  img {
    width: 100%;
  }

  ul {
    list-style: disc;
    padding-left: 1.5em;
  }
}

@mixin transformed-position($positions, $screen-width: 1440, $screen-height: 1024) {
  @if map-get($positions, left) {
    left: calc((#{map-get($positions, left)} / 1440) * 100%);
  }

  @if map-get($positions, top) {
    top: calc((#{map-get($positions, top)} / 1024) * 100%);
  }

  @if map-get($positions, right) {
    right: calc((#{map-get($positions, right)} / 1024) * 100%);
  }

  @if map-get($positions, bottom) {
    bottom: calc((#{map-get($positions, bottom)} / 1024) * 100%);
  }
}
